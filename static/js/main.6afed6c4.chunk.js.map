{"version":3,"sources":["App.js","index.js"],"names":["App","useState","displayColorPicker","setDisplayColorPicker","highlightToday","setHighlightToday","lang","setLang","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","todayColor","setTodayColor","textColor","setTextColor","animationSpeed","setAnimationSpeed","sidebarWidth","setSidebarWidth","detailWidth","setDetailWidth","showDetailToggler","setShowDetailToggler","showSidebarToggler","setShowSidebarToggler","onePanelAtATime","setOnePanelAtATime","allowDeleteEvent","setAllowDeleteEvent","openDetailsOnDateSelection","setOpenDetailsOnDateSelection","timeFormat24","setTimeFormat24","detailDateFormat","setDetailDateFormat","className","href","target","rel","data-size","data-show-count","aria-label","id","style","borderRadius","border","date","Date","deleteEvent","index","console","log","marginTop","htmlFor","type","name","checked","onChange","e","value","defaultChecked","onClick","color","onChangeComplete","c","hex","disableAlpha","parseInt","marginLeft","toString","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6afed6c4.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport './App.css'\nimport { ChromePicker } from 'react-color'\nimport GitHubButton from 'react-github-btn'\nimport RevoCalendar from 'revo-calendar'\nimport 'revo-calendar/dist/index.css'\n\nfunction App() {\n  const [eventList, setEvents] = useState([])\n\n  const [displayColorPicker, setDisplayColorPicker] = useState(0)\n\n  const [highlightToday, setHighlightToday] = useState(true)\n  const [lang, setLang] = useState('en')\n  const [primaryColor, setPrimaryColor] = useState('#4F6995')\n  const [secondaryColor, setSecondaryColor] = useState('#D7E6EE')\n  const [todayColor, setTodayColor] = useState('#3B3966')\n  const [textColor, setTextColor] = useState('#333333')\n  const [animationSpeed, setAnimationSpeed] = useState(300)\n  const [sidebarWidth, setSidebarWidth] = useState(180)\n  const [detailWidth, setDetailWidth] = useState(280)\n  const [showDetailToggler, setShowDetailToggler] = useState(true)\n  const [showSidebarToggler, setShowSidebarToggler] = useState(true)\n  const [onePanelAtATime, setOnePanelAtATime] = useState(false)\n  const [allowDeleteEvent, setAllowDeleteEvent] = useState(true)\n  const [openDetailsOnDateSelection, setOpenDetailsOnDateSelection] = useState(\n    true\n  )\n  const [timeFormat24, setTimeFormat24] = useState(true)\n  const [detailDateFormat, setDetailDateFormat] = useState('DD/MM/YYYY')\n\n  return (\n    <Fragment>\n      <header>\n        <div className='header'>\n          <h1>RevoCalendar</h1>\n          <ul>\n            <li>\n              <a href='#gettingStarted'>Getting Started</a>\n            </li>\n            <li>\n              <a href='#example'>Live Example</a>\n            </li>\n            <li>\n              <a\n                href='https://gjmolter.com'\n                target='_blank'\n                rel='noreferrer noopener'\n              >\n                Author\n              </a>\n            </li>\n            <li>\n              <GitHubButton\n                href='https://github.com/gjmolter/revo-calendar'\n                data-size='large'\n                data-show-count='true'\n                aria-label='Star gjmolter/revo-calendar on GitHub'\n              >\n                Star\n              </GitHubButton>\n            </li>\n          </ul>\n        </div>\n      </header>\n      <div className='container'>\n        <h2 id='gettingStarted'>Getting Started</h2>\n        <p>First, install revo-calendar package using NPM or Yarn</p>\n        <div className='code'>\n          <code>\n            <pre>$ npm i revo-calendar</pre>\n            <pre className='comment'># or</pre>\n            <pre>$ yarn add revo-calendar</pre>\n          </code>\n        </div>\n        <p>Then, import the component and the CSS file</p>\n        <div className='code'>\n          <code>\n            <pre>\n              <span className='codePink'>import</span> RevoCalendar{' '}\n              <span className='codePink'>from</span>{' '}\n              <span className='codeYellow'>'revo-calendar'</span>\n            </pre>\n            <pre>\n              <span className='codePink'>import </span>\n              <span className='codeYellow'>'revo-calendar/dist/index.css'</span>\n            </pre>\n          </code>\n        </div>\n\n        <h2 id='example'>Live Example</h2>\n        <div className='demo'>\n          <RevoCalendar\n            style={{\n              borderRadius: '5px',\n              border: '5px solid var(--primaryColor)'\n            }}\n            date={new Date()}\n            deleteEvent={(index) => {\n              console.log(index)\n            }}\n            highlightToday={highlightToday}\n            lang={lang}\n            primaryColor={primaryColor}\n            secondaryColor={secondaryColor}\n            todayColor={todayColor}\n            textColor={textColor}\n            animationSpeed={animationSpeed}\n            sidebarWidth={sidebarWidth}\n            detailWidth={detailWidth}\n            showDetailToggler={showDetailToggler}\n            showSidebarToggler={showSidebarToggler}\n            onePanelAtATime={onePanelAtATime}\n            allowDeleteEvent={allowDeleteEvent}\n            openDetailsOnDateSelection={openDetailsOnDateSelection}\n            timeFormat24={timeFormat24}\n            detailDateFormat={detailDateFormat}\n          />\n        </div>\n        <p style={{ marginTop: '3rem' }}>\n          Before you start playing, please note that you won't be able to modify\n          the <span>date</span>, <span>languages</span>, <span>style</span>,{' '}\n          <span>className</span>, <span>deleteEvent</span>,{' '}\n          <span>detailDefault</span>, <span>sidebarDefault</span> and{' '}\n          <span>getCurrentCalendarState</span> props in this demo.\n        </p>\n        <p>\n          For detailed explanations on all available props, check the{' '}\n          <a\n            href='https://github.com/gjmolter/revo-calendar'\n            target='_blank'\n            rel='noreferrer noopener'\n          >\n            README on GitHub\n          </a>\n        </p>\n        <div className='options'>\n          <div>\n            <label htmlFor='highlightToday'>highlightToday: </label>\n            <input\n              type='checkbox'\n              name='highlightToday'\n              checked={highlightToday}\n              onChange={(e) => {\n                setHighlightToday(e.target.checked)\n              }}\n            />\n          </div>\n          <div\n            onChange={(e) => {\n              setLang(e.target.value)\n            }}\n          >\n            <label htmlFor='lang'>lang: </label>\n            <input type='radio' name='lang' value='en' id='en' defaultChecked />\n            <label htmlFor='en'> English</label>\n            <input type='radio' name='lang' value='pt' id='pt' />\n            <label htmlFor='pt'> Portuguese</label>\n            <input type='radio' name='lang' value='es' id='es' />\n            <label htmlFor='es'> Spanish</label>\n            <input type='radio' name='lang' value='de' id='de' />\n            <label htmlFor='de'> German</label>\n          </div>\n          <div>\n            <label>primaryColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 1 ? 0 : 1)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 1 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 1 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={primaryColor}\n                  onChangeComplete={(c) => setPrimaryColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label>secondaryColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 2 ? 0 : 2)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 2 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 2 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={secondaryColor}\n                  onChangeComplete={(c) => setSecondaryColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label>todayColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 3 ? 0 : 3)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 3 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 3 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={todayColor}\n                  onChangeComplete={(c) => setTodayColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label>textColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 4 ? 0 : 4)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 4 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 4 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={textColor}\n                  onChangeComplete={(c) => setTextColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label htmlFor='animationSpeed'>animationSpeed: </label>\n            <input\n              type='number'\n              name='animationSpeed'\n              onChange={(e) => setAnimationSpeed(parseInt(e.target.value))}\n              value={animationSpeed}\n            ></input>\n            <span style={{ marginLeft: '10px' }}>ms</span>\n          </div>\n          <div>\n            <label htmlFor='sidebarWidth'>sidebarWidth: </label>\n            <input\n              type='number'\n              name='sidebarWidth'\n              onChange={(e) => setSidebarWidth(parseInt(e.target.value))}\n              value={sidebarWidth}\n            ></input>\n            <span style={{ marginLeft: '10px' }}>px</span>\n          </div>\n          <div>\n            <label htmlFor='detailWidth'>detailWidth: </label>\n            <input\n              type='number'\n              name='detailWidth'\n              onChange={(e) => setDetailWidth(parseInt(e.target.value))}\n              value={detailWidth}\n            ></input>\n            <span style={{ marginLeft: '10px' }}>px</span>\n          </div>\n          <div>\n            <label htmlFor='showDetailToggler'>showDetailToggler: </label>\n            <input\n              type='checkbox'\n              name='showDetailToggler'\n              checked={showDetailToggler}\n              onChange={(e) => {\n                setShowDetailToggler(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='showSidebarToggler'>showSidebarToggler: </label>\n            <input\n              type='checkbox'\n              name='showSidebarToggler'\n              checked={showSidebarToggler}\n              onChange={(e) => {\n                setShowSidebarToggler(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='onePanelAtATime'>onePanelAtATime: </label>\n            <input\n              type='checkbox'\n              name='onePanelAtATime'\n              checked={onePanelAtATime}\n              onChange={(e) => {\n                setOnePanelAtATime(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='allowDeleteEvent'>allowDeleteEvent: </label>\n            <input\n              type='checkbox'\n              name='allowDeleteEvent'\n              checked={allowDeleteEvent}\n              onChange={(e) => {\n                setAllowDeleteEvent(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='openDetailsOnDateSelection'>\n              openDetailsOnDateSelection:{' '}\n            </label>\n            <input\n              type='checkbox'\n              name='openDetailsOnDateSelection'\n              checked={openDetailsOnDateSelection}\n              onChange={(e) => {\n                setOpenDetailsOnDateSelection(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='timeFormat24'>timeFormat24: </label>\n            <input\n              type='checkbox'\n              name='timeFormat24'\n              checked={timeFormat24}\n              onChange={(e) => {\n                setTimeFormat24(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='detailDateFormat'>detailDateFormat: </label>\n            <input\n              type='text'\n              name='detailDateFormat'\n              value={detailDateFormat}\n              onChange={(e) => {\n                setDetailDateFormat(e.target.value)\n              }}\n            />\n          </div>\n        </div>\n        <p>\n          Current coponent's JSX code (Some of these could be removed, if it\n          wouldn't change the component's defaults):\n        </p>\n        <div className='code'>\n          <code>\n            <pre>\n              {'<'}\n              <span className='codeBlue'>RevoCalendar</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>events</span>\n              {'={'}\n              <span className='codePurple'>eventList</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>style</span>\n              {'={{'}\n            </pre>\n            <pre className='tab2'>\n              borderRadius:\n              <span className='codeYellow'>\"5px\"</span>\n              {','}\n            </pre>\n            <pre className='tab2'>\n              border:\n              <span className='codeYellow'>\n                \"5px solid var(--primaryColor)\"\n              </span>\n            </pre>\n            <pre className='tab'>{'}}'}</pre>\n            <pre className='tab'>\n              <span className='codeGreen'>highlightToday</span>\n              {'={'}\n              <span className='codePurple'>{highlightToday.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>lang</span>\n              {'='}\n              <span className='codeYellow'>\"{lang}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>primaryColor</span>\n              {'='}\n              <span className='codeYellow'>\"{primaryColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>secondaryColor</span>\n              {'='}\n              <span className='codeYellow'>\"{secondaryColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>todayColor</span>\n              {'='}\n              <span className='codeYellow'>\"{todayColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>textColor</span>\n              {'='}\n              <span className='codeYellow'>\"{textColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>animationSpeed</span>\n              {'={'}\n              <span className='codePurple'>{animationSpeed}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>sidebarWidth</span>\n              {'={'}\n              <span className='codePurple'>{sidebarWidth}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>detailWidth</span>\n              {'={'}\n              <span className='codePurple'>{detailWidth}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>showDetailToggler</span>\n              {'={'}\n              <span className='codePurple'>{showDetailToggler.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>showSidebarToggler</span>\n              {'={'}\n              <span className='codePurple'>\n                {showSidebarToggler.toString()}\n              </span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>onePanelAtATime</span>\n              {'={'}\n              <span className='codePurple'>{onePanelAtATime.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>allowDeleteEvent</span>\n              {'={'}\n              <span className='codePurple'>{allowDeleteEvent.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>openDetailsOnDateSelection</span>\n              {'={'}\n              <span className='codePurple'>\n                {openDetailsOnDateSelection.toString()}\n              </span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>timeFormat24</span>\n              {'={'}\n              <span className='codePurple'>{timeFormat24.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>detailDateFormat</span>\n              {'='}\n              <span className='codeYellow'>\"{detailDateFormat}\"</span>\n            </pre>\n            <pre>{'/>'}</pre>\n          </code>\n        </div>\n      </div>\n      <footer>\n        <p>\n          If you find this usefull and it has saved you some time, please\n          consider\n        </p>\n        <div className='bmc'>\n          <a\n            target='_blank'\n            rel='noreferrer noopener'\n            href='https://www.buymeacoffee.com/gjmolter'\n          >\n            <img\n              src='https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg'\n              alt='Buying me a Coffee'\n            />\n            <span>Buying me a Coffee</span>\n          </a>\n        </div>\n        <p>\n          Also, feel free to contribute with this project on{' '}\n          <a\n            href='https://github.com/gjmolter/revo-calendar'\n            target='_blank'\n            rel='noreferrer noopener'\n          >\n            GitHub\n          </a>\n        </p>\n      </footer>\n    </Fragment>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}