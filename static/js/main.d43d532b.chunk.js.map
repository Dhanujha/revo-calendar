{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["TRANSLATIONS","en","days","daysShort","daysMin","months","monthsShort","noEventForThisDay","allDay","addEvent","es","de","pt","HELPER_FUNCTIONS","isValidDate","d","isNaN","isLeapYear","cM","cY","isToday","today","y","m","getRGBAColor","color","parseInt","temp_elem","document","flag","getComputedStyle","a","getFirstWeekDayOfMonth","Date","getNumberWithOrdinal","s","v","n","getFormattedDate","mm","date","dd","nth","this","format","languages","getFormattedTime","hours","minutes","time","hour","minute","hour12","animatingSidebar","animatingDetail","style","className","events","highlightToday","lang","primaryColor","secondaryColor","todayColor","textColor","indicatorColor","animationSpeed","sidebarWidth","detailWidth","showDetailToggler","detailDefault","showSidebarToggler","sidebarDefault","onePanelAtATime","allowDeleteEvent","openDetailsOnDateSelection","timeFormat24","showAllDayLabel","detailDateFormat","dateSelected","eventSelected","index","deleteEvent","primaryColorRGBA","secondaryColorRGBA","todayColorRGBA","indicatorColorRGBA","textColorRGBA","calendarRef","useRef","useState","useEffect","setSize","window","updateSize","useCalendarSize","calendarWidth","floatingPanels","console","action","onClick","aria-hidden","focusable","width","height","transform","angle","preserveAspectRatio","viewBox","fill","x","styles","sidebarOpen","onAnimationEnd","setYear","currentYear","key","i","setMonth","setSidebarState","setDetailsState","daysInMonths","highlight","hasEvent","indexEvent","currentDate","currentMonth","tempDate","day","setDay","weekDay","gridColumnStart","selectedDate","eventDivs","eventDate","event","setDeleteState","showDelete","icon","detailsOpen","month","year","currentDay","ref","sidebarHeight","App","reso1","setHours","reso2","reso3","reso4","lunchWithKevin","setDate","getDate","meetingWithVito","dinnerWithFredo","dayAfterTomorrow","name","allday","extra","text","eventList","setEvents","displayColorPicker","setDisplayColorPicker","showAddEventModal","setShowAddEventModal","setHighlightToday","setLang","setPrimaryColor","setSecondaryColor","setTodayColor","setTextColor","setIndicatorColor","setAnimationSpeed","setSidebarWidth","setDetailWidth","setShowDetailToggler","setShowSidebarToggler","setOnePanelAtATime","setAllowDeleteEvent","setOpenDetailsOnDateSelection","setTimeFormat24","setShowAllDayLabel","setDetailDateFormat","newEventName","setNewEventName","newEventDate","setNewEventDate","newEventAllDay","setNewEventAllDay","newEventIcon","setNewEventIcon","newEventText","setNewEventText","log","href","target","rel","data-size","data-show-count","aria-label","id","borderRadius","border","temp","splice","type","value","onChange","e","selected","showTimeSelect","dateFormat","htmlFor","getHours","getMinutes","checked","disabled","newEvent","push","marginTop","defaultChecked","onChangeComplete","c","hex","disableAlpha","marginLeft","toString","src","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d43d532b.chunk.js","sourcesContent":["import React, { useState, Fragment, useEffect, useRef } from 'react'\n\nimport styles from './RevoCalendar.module.scss'\n\n/***********\n * HELPERS *\n ***********/\n\nconst TRANSLATIONS = {\n  en: {\n    days: [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday'\n    ],\n    daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    daysMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    months: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ],\n    monthsShort: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n    ],\n    noEventForThisDay: 'No event for this day... so take a rest!',\n    allDay: 'All day',\n    addEvent: 'Add event'\n  },\n  es: {\n    days: [\n      'Domingo',\n      'Lunes',\n      'Martes',\n      'Miércoles',\n      'Jueves',\n      'Viernes',\n      'Sábado'\n    ],\n    daysShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'],\n    daysMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa'],\n    months: [\n      'Enero',\n      'Febrero',\n      'Marzo',\n      'Abril',\n      'Mayo',\n      'Junio',\n      'Julio',\n      'Agosto',\n      'Septiembre',\n      'Octubre',\n      'Noviembre',\n      'Diciembre'\n    ],\n    monthsShort: [\n      'Ene',\n      'Feb',\n      'Mar',\n      'Abr',\n      'May',\n      'Jun',\n      'Jul',\n      'Ago',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dic'\n    ],\n    noEventForThisDay: 'Ningún evento para este día... ¡así que descanse!',\n    allDay: 'Todo el dia',\n    addEvent: 'Añadir evento'\n  },\n  de: {\n    days: [\n      'Sonntag',\n      'Montag',\n      'Dienstag',\n      'Mittwoch',\n      'Donnerstag',\n      'Freitag',\n      'Samstag'\n    ],\n    daysShort: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n    daysMin: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n    months: [\n      'Januar',\n      'Februar',\n      'März',\n      'April',\n      'Mai',\n      'Juni',\n      'Juli',\n      'August',\n      'September',\n      'Oktober',\n      'November',\n      'Dezember'\n    ],\n    monthsShort: [\n      'Jan',\n      'Feb',\n      'Mär',\n      'Apr',\n      'Mai',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Okt',\n      'Nov',\n      'Dez'\n    ],\n    noEventForThisDay:\n      'Keine Veranstaltung für diesen Tag... also ruhen Sie sich aus!',\n    allDay: 'Den ganzen Tag',\n    addEvent: 'Ereignis hinzufügen'\n  },\n  pt: {\n    days: [\n      'Domingo',\n      'Segunda-Feira',\n      'Terça-Feira',\n      'Quarta-Feira',\n      'Quinta-Feira',\n      'Sexta-Feira',\n      'Sábado'\n    ],\n    daysShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\n    daysMin: ['Do', '2ª', '3ª', '4ª', '5ª', '6ª', 'Sa'],\n    months: [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ],\n    monthsShort: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Abr',\n      'Mai',\n      'Jun',\n      'Jul',\n      'Ago',\n      'Set',\n      'Out',\n      'Nov',\n      'Dez'\n    ],\n    noEventForThisDay: 'Nenhum evento para este dia... então descanse!',\n    allDay: 'Dia todo',\n    addEvent: 'Adicionar evento'\n  }\n}\n\nconst HELPER_FUNCTIONS = {\n  isValidDate: function (d) {\n    return d && !isNaN(d.getTime())\n  },\n  isLeapYear: function (cM, cY) {\n    if (cM === 1) {\n      if ((cY % 4 === 0 && cY % 100 !== 0) || cY % 400 === 0) {\n        return [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n      } else {\n        return [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n      }\n    } else {\n      return [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    }\n  },\n  isToday: function (d, m, y) {\n    var today = new Date()\n    return (\n      y === today.getFullYear() &&\n      m === today.getMonth() &&\n      d === today.getDate()\n    )\n  },\n  getRGBAColor: function (color) {\n    if (!color) return\n    if (color.toLowerCase() === 'transparent') return [0, 0, 0, 0]\n    if (color[0] === '#') {\n      if (color.length < 7) {\n        color =\n          '#' +\n          color[1] +\n          color[1] +\n          color[2] +\n          color[2] +\n          color[3] +\n          color[3] +\n          (color.length > 4 ? color[4] + color[4] : '')\n      }\n      return [\n        parseInt(color.substr(1, 2), 16),\n        parseInt(color.substr(3, 2), 16),\n        parseInt(color.substr(5, 2), 16),\n        color.length > 7 ? parseInt(color.substr(7, 2), 16) / 255 : 1\n      ]\n    }\n    if (color.indexOf('rgb') === -1) {\n      var temp_elem = document.body.appendChild(\n        document.createElement('fictum')\n      )\n      var flag = 'rgb(1, 2, 3)'\n      temp_elem.style.color = flag\n      if (temp_elem.style.color !== flag) return\n      temp_elem.style.color = color\n      if (temp_elem.style.color === flag || temp_elem.style.color === '') return\n      color = getComputedStyle(temp_elem).color\n      document.body.removeChild(temp_elem)\n    }\n    if (color.indexOf('rgb') === 0) {\n      if (color.indexOf('rgba') === -1) color += ',1'\n      return color.match(/[\\.\\d]+/g).map(function (a) {\n        return +a\n      })\n    }\n  },\n  getFirstWeekDayOfMonth: function (cM, cY) {\n    return new Date(cY, cM, 1).getDay()\n  },\n  getNumberWithOrdinal: function (n) {\n    var s = ['th', 'st', 'nd', 'rd'],\n      v = n % 100\n    return n + (s[(v - 20) % 10] || s[v] || s[0])\n  },\n  getFormattedDate: function (date, format, lang, languages) {\n    var mm =\n      date.getMonth() + 1 <= 9\n        ? '0' + (date.getMonth() + 1)\n        : date.getMonth() + 1\n    var dd = date.getDate() <= 9 ? '0' + date.getDate() : date.getDate()\n    var nth = this.getNumberWithOrdinal(date.getDate())\n\n    format = format.replace('MMMM', languages[lang].months[date.getMonth()])\n    format = format.replace('MMM', languages[lang].monthsShort[date.getMonth()])\n    format = format.replace('MM', mm)\n    format = format.replace('DD', dd)\n    format = format.replace('nth', nth)\n    format = format.replace('dddd', languages[lang].days[date.getDay()])\n    format = format.replace('ddd', languages[lang].daysShort[date.getDay()])\n    format = format.replace('dd', languages[lang].daysMin[date.getDay()])\n    format = format.replace('YYYY', date.getFullYear())\n    format = format.replace('YY', date.getFullYear().toString().substr(2))\n\n    return format\n  },\n  getFormattedTime: function (date, format24h) {\n    if (format24h) {\n      var hours = date.getHours() <= 9 ? '0' + date.getHours() : date.getHours()\n      var minutes =\n        date.getMinutes() <= 9 ? '0' + date.getMinutes() : date.getMinutes()\n      return `${hours}:${minutes}`\n    } else {\n      var time = date.toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      })\n      return `${time}`\n    }\n  }\n}\n\n// -1 = ANIMATE CLOSING | 0 = NOTHING | 1 = ANIMATE OPENING.\nlet animatingSidebar = 0\nlet animatingDetail = 0\n\n/******************\n * MAIN COMPONENT *\n ******************/\nexport default function RevoCalendar({\n  style = {},\n  className = '',\n  events = [],\n  highlightToday = true,\n  lang = 'en',\n  primaryColor = '#4F6995',\n  secondaryColor = '#c4dce9',\n  todayColor = '#3B3966',\n  textColor = '#333333',\n  indicatorColor = 'orange',\n  animationSpeed = 300,\n  sidebarWidth = 180,\n  detailWidth = 280,\n  showDetailToggler = true,\n  detailDefault = true,\n  showSidebarToggler = true,\n  sidebarDefault = true,\n  onePanelAtATime = false,\n  allowDeleteEvent = true,\n  openDetailsOnDateSelection = true,\n  timeFormat24 = true,\n  showAllDayLabel = false,\n  detailDateFormat = 'DD/MM/YYYY',\n  languages = TRANSLATIONS,\n  date = new Date(),\n  dateSelected = (date) => {},\n  eventSelected = (index) => {},\n  addEvent = (date) => {},\n  deleteEvent = (index) => {}\n}) {\n  // TRANSFORM ANY PASSED COLOR FORMAT INTO RGB.\n  const primaryColorRGBA = `rgb(${\n    HELPER_FUNCTIONS.getRGBAColor(primaryColor)[0]\n  }, ${HELPER_FUNCTIONS.getRGBAColor(primaryColor)[1]}, ${\n    HELPER_FUNCTIONS.getRGBAColor(primaryColor)[2]\n  })`\n  const secondaryColorRGBA = `rgb(${\n    HELPER_FUNCTIONS.getRGBAColor(secondaryColor)[0]\n  }, ${HELPER_FUNCTIONS.getRGBAColor(secondaryColor)[1]}, ${\n    HELPER_FUNCTIONS.getRGBAColor(secondaryColor)[2]\n  })`\n  const todayColorRGBA = `rgb(${\n    HELPER_FUNCTIONS.getRGBAColor(todayColor)[0]\n  }, ${HELPER_FUNCTIONS.getRGBAColor(todayColor)[1]}, ${\n    HELPER_FUNCTIONS.getRGBAColor(todayColor)[2]\n  })`\n  const indicatorColorRGBA = `rgb(${\n    HELPER_FUNCTIONS.getRGBAColor(indicatorColor)[0]\n  }, ${HELPER_FUNCTIONS.getRGBAColor(indicatorColor)[1]}, ${\n    HELPER_FUNCTIONS.getRGBAColor(indicatorColor)[2]\n  })`\n  const textColorRGBA = `rgb(${HELPER_FUNCTIONS.getRGBAColor(textColor)[0]}, ${\n    HELPER_FUNCTIONS.getRGBAColor(textColor)[1]\n  }, ${HELPER_FUNCTIONS.getRGBAColor(textColor)[2]})`\n\n  const calendarRef = useRef(null)\n\n  // GET CALENDAR SIZE HOOK.\n  function useCalendarSize() {\n    const [size, setSize] = useState([0, 0])\n    useEffect(() => {\n      function updateSize() {\n        setSize([\n          calendarRef.current.offsetWidth,\n          calendarRef.current.children[0].scrollHeight\n        ])\n      }\n      window.addEventListener('resize', updateSize)\n      updateSize()\n      return () => window.removeEventListener('resize', updateSize)\n    }, [calendarRef.current])\n    return size\n  }\n\n  const [calendarWidth, sidebarHeight] = useCalendarSize()\n\n  // IF CALENDAR WIDTH CAN'T FIT BOTH PANELS, FORCE ONE PANEL AT A TIME.\n  if (calendarWidth <= 320 + sidebarWidth + detailWidth) {\n    onePanelAtATime = true\n    // IF BOTH SIDEBAR AND DETAIL PANELS ARE SET TO BE OPEN BY DEFAULT, SIDEBAR WILL HAVE PRIORITY.\n    if (sidebarDefault && detailDefault) {\n      detailDefault = false\n    }\n  }\n\n  // IN ORDER TO MAKE IT RESPONSIBLE, PANELS WILL FLOAT ON TOP OF CALENDAR ON LOW RES.\n  const floatingPanels =\n    calendarWidth <= 320 + sidebarWidth || calendarWidth <= 320 + detailWidth\n\n  // IF, WITH THE CURRENT SETTING, THE SIDEBAR OR DETAIL PANELS WON'T FIT THE SCREEN, MAKE THEM SMALLER.\n  sidebarWidth =\n    calendarWidth < sidebarWidth + 50 ? calendarWidth - 50 : sidebarWidth\n  detailWidth =\n    calendarWidth < detailWidth + 50 ? calendarWidth - 50 : detailWidth\n\n  // USE TODAY AS DEFAULT SELECTED DATE IF PASSED DATE IS INVALID.\n  if (!HELPER_FUNCTIONS.isValidDate(date)) {\n    console.log('The passed date prop is invalid')\n    date = new Date()\n  }\n\n  // SET INITIAL STATE.\n  const [currentDay, setDay] = useState(date.getDate())\n  const [currentMonth, setMonth] = useState(date.getMonth())\n  const [currentYear, setYear] = useState(date.getFullYear())\n\n  const [sidebarOpen, setSidebarState] = useState(sidebarDefault)\n  const [detailsOpen, setDetailsState] = useState(detailDefault)\n\n  // GIVE PARENT COMPONENT THE CURRENT SELECTED CALENDAR DAY.\n  useEffect(() => {\n    dateSelected({\n      day: currentDay,\n      month: currentMonth,\n      year: currentYear\n    })\n  }, [currentDay, currentMonth, currentYear])\n\n  // CLOSE DETAILS IF CAN'T FIT IT ANYMORE AFTER RESIZING.\n  useEffect(() => {\n    if (\n      sidebarOpen &&\n      detailsOpen &&\n      calendarWidth <= 320 + sidebarWidth + detailWidth\n    ) {\n      animatingDetail = -1\n      setDetailsState(false)\n    }\n  }, [calendarWidth])\n\n  /***********************\n   * CALENDAR COMPONENTS *\n   ***********************/\n  function CalendarSidebar() {\n    function prevYear() {\n      setYear(currentYear - 1)\n    }\n\n    function nextYear() {\n      setYear(currentYear + 1)\n    }\n\n    // MAKE SURE NO ANIMATION WILL RUN ON NEXT RE-RENDER.\n    function animationEnd() {\n      animatingSidebar = 0\n    }\n\n    function toggleSidebar() {\n      animatingSidebar = sidebarOpen ? -1 : 1\n      setSidebarState(!sidebarOpen)\n      // FORCE DETAILS TO CLOSE IF onePanelAtATime IS true.\n      if (animatingSidebar === 1 && onePanelAtATime && detailsOpen) {\n        animatingDetail = -1\n        setDetailsState(false)\n      }\n    }\n\n    function ChevronButton({ angle, color, action }) {\n      return (\n        <button onClick={action}>\n          <svg\n            aria-hidden='true'\n            focusable='false'\n            width='1em'\n            height='1em'\n            style={{ transform: `rotate(${angle}deg)` }}\n            preserveAspectRatio='xMidYMid meet'\n            viewBox='0 0 8 8'\n          >\n            <path d='M1.5 1L0 2.5l4 4l4-4L6.5 1L4 3.5L1.5 1z' fill={color} />\n            <rect x='0' y='0' width='8' height='8' fill='rgba(0, 0, 0, 0)' />\n          </svg>\n        </button>\n      )\n    }\n\n    return (\n      <Fragment>\n        <div\n          className={`${styles.sidebar}  ${\n            animatingSidebar === 1 && styles.slideInLeft\n          } ${animatingSidebar === -1 && styles.slideOutLeft} ${\n            sidebarOpen ? styles.defaultOpen : styles.defaultClosed\n          } ${floatingPanels ? styles.floating : ''}`}\n          onAnimationEnd={animationEnd}\n        >\n          <div className={styles.yearSelect}>\n            <ChevronButton\n              angle={90}\n              color={secondaryColorRGBA}\n              action={prevYear}\n            />\n            <span>{currentYear}</span>\n            <ChevronButton\n              angle={270}\n              color={secondaryColorRGBA}\n              action={nextYear}\n            />\n          </div>\n          <div>\n            <ul>\n              {languages[lang].months.map((month, i) => {\n                return (\n                  <li key={i}>\n                    <button\n                      className={i === currentMonth ? styles.currentMonth : ''}\n                      onClick={() => setMonth(i)}\n                    >\n                      {month}\n                    </button>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n        {showSidebarToggler && (\n          <button\n            onClick={toggleSidebar}\n            className={`${styles.closeSidebar}  ${\n              animatingSidebar === 1 && styles.sidebarTogglerSlideIn\n            } ${animatingSidebar === -1 && styles.sidebarTogglerSlideOut} ${\n              sidebarOpen ? styles.defaultOpen : styles.defaultClosed\n            }`}\n          >\n            <svg width='24' height='24' viewBox='0 0 24 24'>\n              <path\n                fill={secondaryColorRGBA}\n                d='M20 20h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm6 0h-4v4h4v-4zm-6-6h-4v4h4v-4zm16-8v22h-24v-22h3v1c0 1.103.897 2 2 2s2-.897 2-2v-1h10v1c0 1.103.897 2 2 2s2-.897 2-2v-1h3zm-2 6h-20v14h20v-14zm-2-7c0-.552-.447-1-1-1s-1 .448-1 1v2c0 .552.447 1 1 1s1-.448 1-1v-2zm-14 2c0 .552-.447 1-1 1s-1-.448-1-1v-2c0-.552.447-1 1-1s1 .448 1 1v2z'\n              />\n            </svg>\n          </button>\n        )}\n      </Fragment>\n    )\n  }\n\n  function CalendarInner() {\n    // GET LIST OF DAYS ON EACH MONTH ACCOUNTING FOR LEAP YEARS.\n    const daysInMonths = HELPER_FUNCTIONS.isLeapYear(currentMonth, currentYear)\n\n    let days = []\n    for (let index = 1; index <= daysInMonths[currentMonth]; index++) {\n      var isToday = HELPER_FUNCTIONS.isToday(index, currentMonth, currentYear)\n      var highlight = isToday && highlightToday\n      var hasEvent = false\n\n      for (let indexEvent = 0; indexEvent < events.length; indexEvent++) {\n        const currentDate = new Date(currentYear, currentMonth, index)\n\n        // TAKE OUT TIME FROM PASSED TIMESTAMP IN ORDER TO COMPARE ONLY DATE\n        var tempDate = new Date(events[indexEvent].date)\n        tempDate.setHours(0, 0, 0, 0)\n\n        if (tempDate.getTime() === currentDate.getTime()) {\n          hasEvent = true\n          break\n        }\n      }\n\n      let day = (\n        <button\n          className={`${highlight ? styles.today : ''} ${\n            index === currentDay ? styles.currentDay : ''\n          }`}\n          onClick={() => {\n            setDay(index)\n            if (openDetailsOnDateSelection && !detailsOpen) {\n              animatingDetail = 1\n              setDetailsState(true)\n              // FORCE SIDEBAR TO CLOSE IF onePanelAtATime IS true.\n              if (onePanelAtATime && sidebarOpen) {\n                animatingSidebar = -1\n                setSidebarState(false)\n              }\n            }\n          }}\n        >\n          <span className={hasEvent ? styles.indicator : ''}>{index}</span>\n        </button>\n      )\n      days.push(day)\n    }\n\n    return (\n      <div className={styles.inner}>\n        <h1 className={styles.monthName}>\n          {languages[lang].months[currentMonth]}\n        </h1>\n        <div className={styles.scrollInner}>\n          <div className={styles.dayNames}>\n            {languages[lang].daysShort.map((weekDay) => {\n              return <div key={weekDay}>{weekDay.toUpperCase()}</div>\n            })}\n          </div>\n          <div className={styles.days}>\n            {days.map((day, i) => {\n              return (\n                <div\n                  key={i}\n                  className={styles.day}\n                  style={\n                    i === 0\n                      ? {\n                          gridColumnStart:\n                            HELPER_FUNCTIONS.getFirstWeekDayOfMonth(\n                              currentMonth,\n                              currentYear\n                            ) + 1\n                        }\n                      : {}\n                  }\n                >\n                  {day}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  function CalendarDetails() {\n    var selectedDate = new Date(currentYear, currentMonth, currentDay)\n\n    // WILL SHOW DELETE EVENT BUTTON ON CURRENT showDelete INDEX. -1 WON'T SHOW ANYTHING\n    const [showDelete, setDeleteState] = useState(-1)\n\n    // MAKE SURE NO ANIMATION WILL RUN ON NEXT RE-RENDER.\n    function animationEnd() {\n      animatingDetail = 0\n    }\n\n    function toggleDetails() {\n      animatingDetail = detailsOpen ? -1 : 1\n      setDetailsState(!detailsOpen)\n      // FORCE SIDEBAR TO CLOSE IF onePanelAtATime IS true.\n      if (animatingDetail === 1 && onePanelAtATime && sidebarOpen) {\n        animatingSidebar = -1\n        setSidebarState(false)\n      }\n    }\n\n    function toggleDeleteButton(i) {\n      // GIVE PARENT COMPONENT THE CURRENT SELECTED EVENT.\n      eventSelected(i)\n\n      if (allowDeleteEvent) {\n        showDelete === i ? setDeleteState(-1) : setDeleteState(i)\n      }\n    }\n\n    let eventDivs = []\n\n    for (let index = 0; index < events.length; index++) {\n      var eventDate = new Date(events[index].date)\n\n      // TAKE OUT TIME FROM PASSED TIMESTAMP IN ORDER TO COMPARE ONLY DATE\n      var tempDate = new Date(events[index].date)\n      tempDate.setHours(0, 0, 0, 0)\n\n      if (\n        HELPER_FUNCTIONS.isValidDate(eventDate) &&\n        tempDate.getTime() === selectedDate.getTime()\n      ) {\n        let event = (\n          <div\n            key={index}\n            className={styles.event}\n            onClick={() => toggleDeleteButton(index)}\n          >\n            <p>{events[index].name}</p>\n            <div>\n              {events[index].allday ? (\n                <Fragment>\n                  {showAllDayLabel ? (\n                    <div>\n                      <svg width='20' height='20' viewBox='0 0 24 24'>\n                        <path\n                          fill={primaryColorRGBA}\n                          d='M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm1 12v-6h-2v8h7v-2h-5z'\n                        />\n                      </svg>\n                      <span>{languages[lang].allDay}</span>\n                    </div>\n                  ) : (\n                    ''\n                  )}\n                </Fragment>\n              ) : (\n                <div>\n                  <svg width='20' height='20' viewBox='0 0 24 24'>\n                    <path\n                      fill={primaryColorRGBA}\n                      d='M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm1 12v-6h-2v8h7v-2h-5z'\n                    />\n                  </svg>\n                  <span>\n                    {HELPER_FUNCTIONS.getFormattedTime(eventDate, timeFormat24)}\n                  </span>\n                </div>\n              )}\n              {events[index].extra && (\n                <div>\n                  <svg width='20' height='20' viewBox='0 0 24 24'>\n                    <path\n                      fill={primaryColorRGBA}\n                      d={events[index].extra.icon}\n                    ></path>\n                  </svg>\n                  <span>{events[index].extra.text}</span>\n                </div>\n              )}\n            </div>\n            {showDelete === index && (\n              <button onClick={() => deleteEvent(index)}>Delete</button>\n            )}\n          </div>\n        )\n        eventDivs.push(event)\n      }\n    }\n\n    // FOR NO-EVENT DAYS ADD NO EVENTS TEXT\n    if (eventDivs.length === 0) {\n      eventDivs.push(<p key={-1}>{languages[lang].noEventForThisDay}</p>)\n    }\n\n    return (\n      <Fragment>\n        <div\n          className={`${styles.detail}  ${\n            animatingDetail === 1 && styles.slideInRight\n          } ${animatingDetail === -1 && styles.slideOutRight} ${\n            detailsOpen ? styles.defaultOpen : styles.defaultClosed\n          } ${floatingPanels ? styles.floating : ''}`}\n          onAnimationEnd={animationEnd}\n        >\n          <div className={styles.dateTitle}>\n            {HELPER_FUNCTIONS.getFormattedDate(\n              selectedDate,\n              detailDateFormat,\n              lang,\n              languages\n            )}\n            <button\n              className={styles.addEvent}\n              onClick={() =>\n                addEvent(new Date(currentYear, currentMonth, currentDay))\n              }\n            >\n              {languages[lang].addEvent}\n            </button>\n          </div>\n          <div className={styles.events}>\n            {eventDivs.map((event) => {\n              return event\n            })}\n          </div>\n        </div>\n        {showDetailToggler && (\n          <button\n            onClick={toggleDetails}\n            className={`${styles.closeDetail}  ${\n              animatingDetail === 1 && styles.detailsTogglerSlideIn\n            } ${animatingDetail === -1 && styles.detailsTogglerSlideOut} ${\n              detailsOpen ? styles.defaultOpen : styles.defaultClosed\n            }`}\n          >\n            <svg width='24' height='24' viewBox='0 0 24 24'>\n              <path\n                fill={secondaryColorRGBA}\n                d='M24 6h-24v-4h24v4zm0 4h-24v4h24v-4zm0 8h-24v4h24v-4z'\n              />\n            </svg>\n          </button>\n        )}\n      </Fragment>\n    )\n  }\n\n  /**************************\n   * RENDER ACTUAL CALENDAR *\n   **************************/\n  return (\n    <div\n      className={`${styles.revoCalendar} ${className}`}\n      ref={calendarRef}\n      style={style}\n    >\n      <style>{`\n        .${styles.revoCalendar} {\n          --primaryColor: ${primaryColorRGBA};\n          --primaryColor50: rgba(\n            ${HELPER_FUNCTIONS.getRGBAColor(primaryColorRGBA)[0]},\n            ${HELPER_FUNCTIONS.getRGBAColor(primaryColorRGBA)[1]},\n            ${HELPER_FUNCTIONS.getRGBAColor(primaryColorRGBA)[2]},\n            ${HELPER_FUNCTIONS.getRGBAColor(primaryColorRGBA)[3] / 2}\n          );\n          --secondaryColor: ${secondaryColorRGBA};\n          --todayColor: ${todayColorRGBA};\n          --textColor: ${textColorRGBA};\n          --indicatorColor: ${indicatorColorRGBA};\n          --animationSpeed: ${animationSpeed}ms;\n          --sidebarWidth: ${sidebarWidth}px;\n          --detailWidth: ${detailWidth}px;\n          --minHeight: ${sidebarHeight}px;\n        }\n      `}</style>\n      <CalendarSidebar />\n      <CalendarInner />\n      <CalendarDetails />\n    </div>\n  )\n}\n","import React, { Fragment, useState, useEffect } from 'react'\nimport './App.css'\nimport { ChromePicker } from 'react-color'\nimport GitHubButton from 'react-github-btn'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nimport RevoCalendar from 'revo-calendar'\nimport 'revo-calendar/dist/index.css'\n\nfunction App() {\n  var reso1 = new Date()\n  reso1.setHours(17, 0, 0)\n\n  var reso2 = new Date()\n  reso2.setHours(18, 15, 0)\n\n  var reso3 = new Date()\n  reso3.setHours(19, 30, 0)\n\n  var reso4 = new Date()\n  reso4.setHours(20, 45, 0)\n\n  var lunchWithKevin = new Date()\n  lunchWithKevin.setDate(lunchWithKevin.getDate() + 1)\n  lunchWithKevin.setHours(13, 0, 0)\n\n  var meetingWithVito = new Date()\n  meetingWithVito.setDate(meetingWithVito.getDate() + 1)\n  meetingWithVito.setHours(16, 30, 0)\n\n  var dinnerWithFredo = new Date()\n  dinnerWithFredo.setDate(dinnerWithFredo.getDate() + 1)\n  dinnerWithFredo.setHours(20, 0, 0)\n\n  var dayAfterTomorrow = new Date()\n  dayAfterTomorrow.setDate(dayAfterTomorrow.getDate() + 2)\n\n  const [eventList, setEvents] = useState([\n    {\n      name: 'Homer Simpson',\n      date: +reso1,\n      allday: false,\n      extra: {\n        icon:\n          'M20.822 18.096c-3.439-.794-6.64-1.49-5.09-4.418 4.72-8.912 1.251-13.678-3.732-13.678-5.082 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-3.073.71-3.188 2.236-3.178 4.904l.004 1h23.99l.004-.969c.012-2.688-.092-4.222-3.176-4.935z',\n        text: 'party of 5'\n      }\n    },\n    {\n      name: 'Han Solo',\n      date: +reso2,\n      allday: false,\n      extra: {\n        icon:\n          'M20.822 18.096c-3.439-.794-6.64-1.49-5.09-4.418 4.72-8.912 1.251-13.678-3.732-13.678-5.082 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-3.073.71-3.188 2.236-3.178 4.904l.004 1h23.99l.004-.969c.012-2.688-.092-4.222-3.176-4.935z',\n        text: 'party of 2'\n      }\n    },\n    {\n      name: 'Gandalf, the Grey',\n      date: +reso3,\n      allday: false,\n      extra: {\n        icon:\n          'M20.822 18.096c-3.439-.794-6.64-1.49-5.09-4.418 4.72-8.912 1.251-13.678-3.732-13.678-5.082 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-3.073.71-3.188 2.236-3.178 4.904l.004 1h23.99l.004-.969c.012-2.688-.092-4.222-3.176-4.935z',\n        text: 'party of 9'\n      }\n    },\n    {\n      name: 'Britta Perry',\n      date: +reso4,\n      allday: false,\n      extra: {\n        icon:\n          'M20.822 18.096c-3.439-.794-6.64-1.49-5.09-4.418 4.72-8.912 1.251-13.678-3.732-13.678-5.082 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-3.073.71-3.188 2.236-3.178 4.904l.004 1h23.99l.004-.969c.012-2.688-.092-4.222-3.176-4.935z',\n        text: 'party of 7'\n      }\n    },\n    {\n      name: 'Meeting with Vito',\n      date: +meetingWithVito,\n      allday: false\n    },\n    {\n      name: 'Lunch with Michael',\n      date: +lunchWithKevin,\n      allday: false\n    },\n    {\n      name: 'Dinner with Fredo',\n      date: +dinnerWithFredo,\n      allday: false\n    },\n    {\n      name: 'Day after Tomorrow',\n      date: +dayAfterTomorrow,\n      allday: true,\n      extra: {\n        icon:\n          'M12 9.312l-1.762.491 1.562.881-.491.871-1.562-.881.491 1.762-.963.268-.76-2.724-2.015-1.126v1.939l2 2-.707.707-1.293-1.293v1.793h-1v-1.793l-1.293 1.293-.707-.707 2-2v-1.939l-2.015 1.126-.761 2.724-.963-.268.491-1.762-1.562.882-.491-.871 1.562-.881-1.761-.492.269-.962 2.725.76 1.982-1.11-1.983-1.109-2.724.759-.269-.962 1.762-.491-1.563-.882.491-.871 1.562.881-.49-1.762.963-.269.76 2.725 2.015 1.128v-1.94l-2-2 .707-.707 1.293 1.293v-1.793h1v1.793l1.293-1.293.707.707-2 2v1.94l2.016-1.127.76-2.725.963.269-.492 1.761 1.562-.881.491.871-1.562.881 1.762.492-.269.962-2.725-.76-1.982 1.11 1.982 1.109 2.725-.76.269.963zm4-5.812v7.525c0 1.57-.514 2.288-1.41 3.049-1.011.859-1.59 2.107-1.59 3.426 0 2.481 2.019 4.5 4.5 4.5s4.5-2.019 4.5-4.5c0-1.319-.579-2.567-1.589-3.426-.897-.762-1.411-1.48-1.411-3.049v-7.525c0-.827-.673-1.5-1.5-1.5s-1.5.673-1.5 1.5zm5 0v7.525c0 .587.258 1.145.705 1.525 1.403 1.192 2.295 2.966 2.295 4.95 0 3.59-2.909 6.5-6.5 6.5s-6.5-2.91-6.5-6.5c0-1.984.892-3.758 2.295-4.949.447-.381.705-.94.705-1.526v-7.525c0-1.934 1.567-3.5 3.5-3.5s3.5 1.566 3.5 3.5zm0 14c0 1.934-1.567 3.5-3.5 3.5s-3.5-1.566-3.5-3.5c0-1.141.599-2.084 1.393-2.781 1.01-.889 1.607-1.737 1.607-3.221v-.498h1v.498c0 1.486.595 2.33 1.607 3.221.794.697 1.393 1.64 1.393 2.781z',\n        text: '-30º C'\n      }\n    }\n  ])\n\n  const [displayColorPicker, setDisplayColorPicker] = useState(0)\n  const [showAddEventModal, setShowAddEventModal] = useState(false)\n\n  const [highlightToday, setHighlightToday] = useState(true)\n  const [lang, setLang] = useState('en')\n  const [primaryColor, setPrimaryColor] = useState('#4F6995')\n  const [secondaryColor, setSecondaryColor] = useState('#D7E6EE')\n  const [todayColor, setTodayColor] = useState('#3B3966')\n  const [textColor, setTextColor] = useState('#333333')\n  const [indicatorColor, setIndicatorColor] = useState('orange')\n  const [animationSpeed, setAnimationSpeed] = useState(300)\n  const [sidebarWidth, setSidebarWidth] = useState(180)\n  const [detailWidth, setDetailWidth] = useState(280)\n  const [showDetailToggler, setShowDetailToggler] = useState(true)\n  const [showSidebarToggler, setShowSidebarToggler] = useState(true)\n  const [onePanelAtATime, setOnePanelAtATime] = useState(false)\n  const [allowDeleteEvent, setAllowDeleteEvent] = useState(true)\n  const [openDetailsOnDateSelection, setOpenDetailsOnDateSelection] = useState(\n    true\n  )\n  const [timeFormat24, setTimeFormat24] = useState(true)\n  const [showAllDayLabel, setShowAllDayLabel] = useState(false)\n  const [detailDateFormat, setDetailDateFormat] = useState('DD/MM/YYYY')\n\n  const [newEventName, setNewEventName] = useState('')\n  const [newEventDate, setNewEventDate] = useState(new Date())\n  const [newEventAllDay, setNewEventAllDay] = useState(false)\n  const [newEventIcon, setNewEventIcon] = useState('')\n  const [newEventText, setNewEventText] = useState('')\n\n  function deleteEvent(i) {\n    var temp = eventList\n    temp.splice(i, 1)\n    setEvents(temp)\n  }\n\n  function addEvent() {\n    setShowAddEventModal(false)\n    var newEvent = {\n      name: newEventName,\n      date: newEventDate,\n      allday: newEventAllDay,\n      extra: {\n        icon: newEventIcon,\n        text: newEventText\n      }\n    }\n    var temp = eventList\n    temp.push(newEvent)\n    setEvents([...temp])\n  }\n\n  useEffect(() => {\n    var deleteEventFunction = `\n    var temp = eventList\n    temp.splice(i, 1)\n    setEvents(temp)`\n\n    var addEventFunction = `\n    var newEvent = {\n      name: newEventName,\n      date: newEventDate,\n      allday: newEventAllDay,\n      extra: {\n        icon: newEventIcon,\n        text: newEventText\n      }\n    };\n    var temp = eventList;\n    temp.push(newEvent);\n    setEvents([...temp]);`\n\n    console.log(\n      `%cfunction %cdeleteEvent %c() {\\n`,\n      'color: #f777c9',\n      'color: #67fd6e',\n      'color: #D7D7D7',\n      deleteEventFunction,\n      `\\n}`\n    )\n    console.log(\n      `%cfunction %caddEvent %c() {\\n`,\n      'color: #f777c9',\n      'color: #67fd6e',\n      'color: #D7D7D7',\n      addEventFunction,\n      `\\n}`\n    )\n  }, [])\n\n  useEffect(() => {\n    console.log('%cEventList: ', 'color: #b788f4', eventList)\n  }, [eventList])\n\n  return (\n    <Fragment>\n      <header>\n        <div className='header'>\n          <h1>RevoCalendar</h1>\n          <div className='mobileMenu'>MOBILE MENU</div>\n          <ul>\n            <li>\n              <a href='#gettingStarted'>Getting Started</a>\n            </li>\n            <li>\n              <a href='#example'>Live Example</a>\n            </li>\n            <li>\n              <a\n                href='https://gjmolter.com'\n                target='_blank'\n                rel='noreferrer noopener'\n              >\n                Author\n              </a>\n            </li>\n            <li>\n              <GitHubButton\n                href='https://github.com/gjmolter/revo-calendar'\n                data-size='large'\n                data-show-count='true'\n                aria-label='Star gjmolter/revo-calendar on GitHub'\n              >\n                Star\n              </GitHubButton>\n            </li>\n          </ul>\n        </div>\n      </header>\n      <div className='container'>\n        <h2 id='gettingStarted'>Getting Started</h2>\n        <p>First, install revo-calendar package using NPM or Yarn</p>\n        <div className='code'>\n          <code>\n            <pre>$ npm i revo-calendar</pre>\n            <pre className='comment'># or</pre>\n            <pre>$ yarn add revo-calendar</pre>\n          </code>\n        </div>\n        <p>Then, import the component and the CSS file</p>\n        <div className='code'>\n          <code>\n            <pre>\n              <span className='codePink'>import</span> RevoCalendar{' '}\n              <span className='codePink'>from</span>{' '}\n              <span className='codeYellow'>'revo-calendar'</span>\n            </pre>\n            <pre>\n              <span className='codePink'>import </span>\n              <span className='codeYellow'>'revo-calendar/dist/index.css'</span>\n            </pre>\n          </code>\n        </div>\n\n        <h2 id='example'>Live Example</h2>\n        <div className='demo'>\n          <RevoCalendar\n            events={eventList}\n            style={{\n              borderRadius: '5px',\n              border: '5px solid var(--primaryColor)'\n            }}\n            date={new Date()}\n            deleteEvent={deleteEvent}\n            highlightToday={highlightToday}\n            lang={lang}\n            primaryColor={primaryColor}\n            secondaryColor={secondaryColor}\n            todayColor={todayColor}\n            textColor={textColor}\n            indicatorColor={indicatorColor}\n            animationSpeed={animationSpeed}\n            sidebarWidth={sidebarWidth}\n            detailWidth={detailWidth}\n            showDetailToggler={showDetailToggler}\n            showSidebarToggler={showSidebarToggler}\n            onePanelAtATime={onePanelAtATime}\n            allowDeleteEvent={allowDeleteEvent}\n            openDetailsOnDateSelection={openDetailsOnDateSelection}\n            timeFormat24={timeFormat24}\n            showAllDayLabel={showAllDayLabel}\n            detailDateFormat={detailDateFormat}\n            addEvent={(date) => {\n              setNewEventDate(date)\n              setShowAddEventModal(true)\n            }}\n          />\n        </div>\n        {showAddEventModal && (\n          <div className='addEventModal'>\n            <h2>Add your own event: </h2>\n            <div className='options'>\n              <code>\n                <pre>\n                  <span className='codePink'>var </span>newEvent = {'{'}\n                </pre>\n                <pre className='tab'>\n                  name<label className='codePink'>:</label> \"\n                  <input\n                    type='text'\n                    value={newEventName}\n                    onChange={(e) => setNewEventName(e.target.value)}\n                  ></input>\n                  \",\n                </pre>\n                <pre className='tab'>\n                  date<label className='codePink'>:</label>\n                  <DatePicker\n                    id='datePicker'\n                    selected={newEventDate}\n                    onChange={(date) => {\n                      setNewEventDate(date)\n                    }}\n                    showTimeSelect\n                    dateFormat='dd/MM/yyyy'\n                  />\n                  <label className='timeDisplay' htmlFor='datePicker'>{`${\n                    newEventDate.getHours() <= 9\n                      ? '0' + newEventDate.getHours()\n                      : newEventDate.getHours()\n                  }:${\n                    newEventDate.getMinutes() <= 9\n                      ? '0' + newEventDate.getMinutes()\n                      : newEventDate.getMinutes()\n                  }`}</label>\n                  , <span className='comment'>{'/* DD/MM/YYYY */'}</span>\n                </pre>\n                <pre className='tab'>\n                  allDay<label className='codePink'>:</label>\n                  <input\n                    type='checkbox'\n                    checked={newEventAllDay}\n                    onChange={(e) => setNewEventAllDay(e.target.checked)}\n                  />\n                  ,\n                </pre>\n                <pre className='tab'>\n                  extra<label className='codePink'>:</label> {'{'}\n                </pre>\n                <pre className='tab2'>\n                  icon<label className='codePink'>:</label>\"\n                  <input\n                    type='text'\n                    value={newEventIcon}\n                    onChange={(e) => setNewEventIcon(e.target.value)}\n                  ></input>\n                  \",\n                </pre>\n                <pre className='tab2'>\n                  text<label className='codePink'>:</label>\"\n                  <input\n                    type='text'\n                    value={newEventText}\n                    onChange={(e) => setNewEventText(e.target.value)}\n                  ></input>\n                  \"\n                </pre>\n                <pre>{'}'}</pre>\n                <div className='addEvent'>\n                  <button\n                    className='colorPickerBtn'\n                    disabled={newEventName === ''}\n                    onClick={addEvent}\n                  >\n                    addEvent()\n                  </button>\n                </div>\n              </code>\n            </div>\n            <div onClick={() => setShowAddEventModal(false)}></div>\n          </div>\n        )}\n        <p style={{ marginTop: '3rem' }}>\n          Before you start playing, please note that you won't be able to modify\n          the <span>date</span>, <span>languages</span>, <span>style</span>,{' '}\n          <span>className</span>, <span>addEvent</span>,{' '}\n          <span>deleteEvent</span>, <span>detailDefault</span>,{' '}\n          <span>sidebarDefault</span>,<span>dateSelected</span> and{' '}\n          <span>eventSelected</span> props in this demo.\n        </p>\n        <p>\n          For detailed explanations on all available props, check the{' '}\n          <a\n            href='https://github.com/gjmolter/revo-calendar'\n            target='_blank'\n            rel='noreferrer noopener'\n          >\n            README on GitHub\n          </a>\n        </p>\n        <div className='options'>\n          <div>\n            <label htmlFor='highlightToday'>highlightToday: </label>\n            <input\n              type='checkbox'\n              name='highlightToday'\n              checked={highlightToday}\n              onChange={(e) => {\n                setHighlightToday(e.target.checked)\n              }}\n            />\n          </div>\n          <div\n            onChange={(e) => {\n              setLang(e.target.value)\n            }}\n          >\n            <label htmlFor='lang'>lang: </label>\n            <input type='radio' name='lang' value='en' id='en' defaultChecked />\n            <label htmlFor='en'> English</label>\n            <input type='radio' name='lang' value='pt' id='pt' />\n            <label htmlFor='pt'> Portuguese</label>\n            <input type='radio' name='lang' value='es' id='es' />\n            <label htmlFor='es'> Spanish</label>\n            <input type='radio' name='lang' value='de' id='de' />\n            <label htmlFor='de'> German</label>\n          </div>\n          <div>\n            <label>primaryColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 1 ? 0 : 1)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 1 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 1 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={primaryColor}\n                  onChangeComplete={(c) => setPrimaryColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label>secondaryColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 2 ? 0 : 2)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 2 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 2 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={secondaryColor}\n                  onChangeComplete={(c) => setSecondaryColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label>todayColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 3 ? 0 : 3)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 3 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 3 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={todayColor}\n                  onChangeComplete={(c) => setTodayColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label>textColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 4 ? 0 : 4)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 4 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 4 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={textColor}\n                  onChangeComplete={(c) => setTextColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label>indicatorColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 5 ? 0 : 5)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 5 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 5 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={indicatorColor}\n                  onChangeComplete={(c) => setIndicatorColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label htmlFor='animationSpeed'>animationSpeed: </label>\n            <input\n              type='number'\n              name='animationSpeed'\n              onChange={(e) => setAnimationSpeed(parseInt(e.target.value))}\n              value={animationSpeed}\n            ></input>\n            <span style={{ marginLeft: '10px' }}>ms</span>\n          </div>\n          <div>\n            <label htmlFor='sidebarWidth'>sidebarWidth: </label>\n            <input\n              type='number'\n              name='sidebarWidth'\n              onChange={(e) => setSidebarWidth(parseInt(e.target.value))}\n              value={sidebarWidth}\n            ></input>\n            <span style={{ marginLeft: '10px' }}>px</span>\n          </div>\n          <div>\n            <label htmlFor='detailWidth'>detailWidth: </label>\n            <input\n              type='number'\n              name='detailWidth'\n              onChange={(e) => setDetailWidth(parseInt(e.target.value))}\n              value={detailWidth}\n            ></input>\n            <span style={{ marginLeft: '10px' }}>px</span>\n          </div>\n          <div>\n            <label htmlFor='showDetailToggler'>showDetailToggler: </label>\n            <input\n              type='checkbox'\n              name='showDetailToggler'\n              checked={showDetailToggler}\n              onChange={(e) => {\n                setShowDetailToggler(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='showSidebarToggler'>showSidebarToggler: </label>\n            <input\n              type='checkbox'\n              name='showSidebarToggler'\n              checked={showSidebarToggler}\n              onChange={(e) => {\n                setShowSidebarToggler(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='onePanelAtATime'>onePanelAtATime: </label>\n            <input\n              type='checkbox'\n              name='onePanelAtATime'\n              checked={onePanelAtATime}\n              onChange={(e) => {\n                setOnePanelAtATime(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='allowDeleteEvent'>allowDeleteEvent: </label>\n            <input\n              type='checkbox'\n              name='allowDeleteEvent'\n              checked={allowDeleteEvent}\n              onChange={(e) => {\n                setAllowDeleteEvent(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='openDetailsOnDateSelection'>\n              openDetailsOnDateSelection:{' '}\n            </label>\n            <input\n              type='checkbox'\n              name='openDetailsOnDateSelection'\n              checked={openDetailsOnDateSelection}\n              onChange={(e) => {\n                setOpenDetailsOnDateSelection(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='timeFormat24'>timeFormat24: </label>\n            <input\n              type='checkbox'\n              name='timeFormat24'\n              checked={timeFormat24}\n              onChange={(e) => {\n                setTimeFormat24(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='showAllDayLabel'>showAllDayLabel: </label>\n            <input\n              type='checkbox'\n              name='showAllDayLabel'\n              checked={showAllDayLabel}\n              onChange={(e) => {\n                setShowAllDayLabel(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='detailDateFormat'>detailDateFormat: </label>\n            <input\n              type='text'\n              name='detailDateFormat'\n              value={detailDateFormat}\n              onChange={(e) => {\n                setDetailDateFormat(e.target.value)\n              }}\n            />\n          </div>\n        </div>\n        <p>\n          Current coponent's JSX code (Some of these could be removed, if it\n          wouldn't change the component's defaults):\n        </p>\n        <div className='code'>\n          <code>\n            <pre>\n              {'<'}\n              <span className='codeBlue'>RevoCalendar</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>events</span>\n              {'={'}\n              <span className='codePurple'>eventList</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>style</span>\n              {'={{'}\n            </pre>\n            <pre className='tab2'>\n              borderRadius:\n              <span className='codeYellow'>\"5px\"</span>\n              {','}\n            </pre>\n            <pre className='tab2'>\n              border:\n              <span className='codeYellow'>\n                \"5px solid var(--primaryColor)\"\n              </span>\n            </pre>\n            <pre className='tab'>{'}}'}</pre>\n            <pre className='tab'>\n              <span className='codeGreen'>highlightToday</span>\n              {'={'}\n              <span className='codePurple'>{highlightToday.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>lang</span>\n              {'='}\n              <span className='codeYellow'>\"{lang}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>primaryColor</span>\n              {'='}\n              <span className='codeYellow'>\"{primaryColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>secondaryColor</span>\n              {'='}\n              <span className='codeYellow'>\"{secondaryColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>todayColor</span>\n              {'='}\n              <span className='codeYellow'>\"{todayColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>textColor</span>\n              {'='}\n              <span className='codeYellow'>\"{textColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>indicatorColor</span>\n              {'='}\n              <span className='codeYellow'>\"{indicatorColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>animationSpeed</span>\n              {'={'}\n              <span className='codePurple'>{animationSpeed}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>sidebarWidth</span>\n              {'={'}\n              <span className='codePurple'>{sidebarWidth}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>detailWidth</span>\n              {'={'}\n              <span className='codePurple'>{detailWidth}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>showDetailToggler</span>\n              {'={'}\n              <span className='codePurple'>{showDetailToggler.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>showSidebarToggler</span>\n              {'={'}\n              <span className='codePurple'>\n                {showSidebarToggler.toString()}\n              </span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>onePanelAtATime</span>\n              {'={'}\n              <span className='codePurple'>{onePanelAtATime.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>allowDeleteEvent</span>\n              {'={'}\n              <span className='codePurple'>{allowDeleteEvent.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>openDetailsOnDateSelection</span>\n              {'={'}\n              <span className='codePurple'>\n                {openDetailsOnDateSelection.toString()}\n              </span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>timeFormat24</span>\n              {'={'}\n              <span className='codePurple'>{timeFormat24.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>showAllDayLabel</span>\n              {'={'}\n              <span className='codePurple'>{showAllDayLabel.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>detailDateFormat</span>\n              {'='}\n              <span className='codeYellow'>\"{detailDateFormat}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>deleteEvent</span>\n              {'={'}\n              <span className='codeGreen'>deleteEvent</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>addEvent</span>\n              {'={'}\n              <span className='codeGreen'>addEvent</span>\n              {'}'}\n            </pre>\n            <pre>{'/>'}</pre>\n          </code>\n        </div>\n        <p>\n          If you're curious on what{' '}\n          <span className='codeGreen'>deleteEvent</span> or{' '}\n          <span className='codeGreen'>addEvent</span> functions do or what the{' '}\n          <span className='codePurple'>eventList</span> variable looks like,\n          check the DevTools Console!\n        </p>\n      </div>\n      <footer>\n        <p>\n          If you find this usefull and it has saved you some time, please\n          consider\n        </p>\n        <div className='bmc'>\n          <a\n            target='_blank'\n            rel='noreferrer noopener'\n            href='https://www.buymeacoffee.com/gjmolter'\n          >\n            <img\n              src='https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg'\n              alt='Buying me a Coffee'\n            />\n            <span>Buying me a Coffee</span>\n          </a>\n        </div>\n        <p>\n          Also, feel free to contribute with this project on{' '}\n          <a\n            href='https://github.com/gjmolter/revo-calendar'\n            target='_blank'\n            rel='noreferrer noopener'\n          >\n            GitHub\n          </a>\n        </p>\n      </footer>\n    </Fragment>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}