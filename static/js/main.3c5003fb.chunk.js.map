{"version":3,"sources":["App.js","index.js"],"names":["App","reso1","Date","setHours","reso2","reso3","reso4","lunchWithKevin","setDate","getDate","meetingWithVito","dinnerWithFredo","dayAfterTomorrow","useState","name","date","allday","extra","icon","text","eventList","setEvents","displayColorPicker","setDisplayColorPicker","highlightToday","setHighlightToday","lang","setLang","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","todayColor","setTodayColor","textColor","setTextColor","animationSpeed","setAnimationSpeed","sidebarWidth","setSidebarWidth","detailWidth","setDetailWidth","showDetailToggler","setShowDetailToggler","showSidebarToggler","setShowSidebarToggler","onePanelAtATime","setOnePanelAtATime","allowDeleteEvent","setAllowDeleteEvent","openDetailsOnDateSelection","setOpenDetailsOnDateSelection","timeFormat24","setTimeFormat24","detailDateFormat","setDetailDateFormat","newEventName","setNewEventName","newEventDate","setNewEventDate","newEventAllDay","setNewEventAllDay","newEventIcon","setNewEventIcon","newEventText","setNewEventText","deleteEvent","i","temp","splice","addEvent","newEvent","push","useEffect","deleteEventFunction","toString","deleteLines","split","join","addEventFunction","addLines","console","log","className","href","target","rel","data-size","data-show-count","aria-label","id","events","style","borderRadius","border","marginTop","type","value","onChange","e","selected","checked","disabled","onClick","htmlFor","defaultChecked","color","onChangeComplete","c","hex","disableAlpha","parseInt","marginLeft","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c5003fb.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\nimport './App.css'\nimport { ChromePicker } from 'react-color'\nimport GitHubButton from 'react-github-btn'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nimport RevoCalendar from 'revo-calendar'\nimport 'revo-calendar/dist/index.css'\n\nfunction App() {\n  var reso1 = new Date()\n  reso1.setHours(17, 0, 0)\n\n  var reso2 = new Date()\n  reso2.setHours(18, 15, 0)\n\n  var reso3 = new Date()\n  reso3.setHours(19, 30, 0)\n\n  var reso4 = new Date()\n  reso4.setHours(20, 45, 0)\n\n  var lunchWithKevin = new Date()\n  lunchWithKevin.setDate(lunchWithKevin.getDate() + 1)\n  lunchWithKevin.setHours(13, 0, 0)\n\n  var meetingWithVito = new Date()\n  meetingWithVito.setDate(meetingWithVito.getDate() + 1)\n  meetingWithVito.setHours(16, 30, 0)\n\n  var dinnerWithFredo = new Date()\n  dinnerWithFredo.setDate(dinnerWithFredo.getDate() + 1)\n  dinnerWithFredo.setHours(20, 0, 0)\n\n  var dayAfterTomorrow = new Date()\n  dayAfterTomorrow.setDate(dayAfterTomorrow.getDate() + 2)\n\n  const [eventList, setEvents] = useState([\n    {\n      name: 'Homer Simpson',\n      date: +reso1,\n      allday: false,\n      extra: {\n        icon:\n          'M20.822 18.096c-3.439-.794-6.64-1.49-5.09-4.418 4.72-8.912 1.251-13.678-3.732-13.678-5.082 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-3.073.71-3.188 2.236-3.178 4.904l.004 1h23.99l.004-.969c.012-2.688-.092-4.222-3.176-4.935z',\n        text: 'party of 5'\n      }\n    },\n    {\n      name: 'Han Solo',\n      date: +reso2,\n      allday: false,\n      extra: {\n        icon:\n          'M20.822 18.096c-3.439-.794-6.64-1.49-5.09-4.418 4.72-8.912 1.251-13.678-3.732-13.678-5.082 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-3.073.71-3.188 2.236-3.178 4.904l.004 1h23.99l.004-.969c.012-2.688-.092-4.222-3.176-4.935z',\n        text: 'party of 2'\n      }\n    },\n    {\n      name: 'Gandalf, the Grey',\n      date: +reso3,\n      allday: false,\n      extra: {\n        icon:\n          'M20.822 18.096c-3.439-.794-6.64-1.49-5.09-4.418 4.72-8.912 1.251-13.678-3.732-13.678-5.082 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-3.073.71-3.188 2.236-3.178 4.904l.004 1h23.99l.004-.969c.012-2.688-.092-4.222-3.176-4.935z',\n        text: 'party of 9'\n      }\n    },\n    {\n      name: 'Britta Perry',\n      date: +reso4,\n      allday: false,\n      extra: {\n        icon:\n          'M20.822 18.096c-3.439-.794-6.64-1.49-5.09-4.418 4.72-8.912 1.251-13.678-3.732-13.678-5.082 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-3.073.71-3.188 2.236-3.178 4.904l.004 1h23.99l.004-.969c.012-2.688-.092-4.222-3.176-4.935z',\n        text: 'party of 7'\n      }\n    },\n    {\n      name: 'Lunch with Michael',\n      date: +lunchWithKevin,\n      allday: false\n    },\n    {\n      name: 'Meeting with Vito',\n      date: +meetingWithVito,\n      allday: false\n    },\n    {\n      name: 'Dinner with Fredo',\n      date: +dinnerWithFredo,\n      allday: false\n    },\n    {\n      name: 'Day after Tomorrow',\n      date: +dayAfterTomorrow,\n      allday: true,\n      extra: {\n        icon:\n          'M12 9.312l-1.762.491 1.562.881-.491.871-1.562-.881.491 1.762-.963.268-.76-2.724-2.015-1.126v1.939l2 2-.707.707-1.293-1.293v1.793h-1v-1.793l-1.293 1.293-.707-.707 2-2v-1.939l-2.015 1.126-.761 2.724-.963-.268.491-1.762-1.562.882-.491-.871 1.562-.881-1.761-.492.269-.962 2.725.76 1.982-1.11-1.983-1.109-2.724.759-.269-.962 1.762-.491-1.563-.882.491-.871 1.562.881-.49-1.762.963-.269.76 2.725 2.015 1.128v-1.94l-2-2 .707-.707 1.293 1.293v-1.793h1v1.793l1.293-1.293.707.707-2 2v1.94l2.016-1.127.76-2.725.963.269-.492 1.761 1.562-.881.491.871-1.562.881 1.762.492-.269.962-2.725-.76-1.982 1.11 1.982 1.109 2.725-.76.269.963zm4-5.812v7.525c0 1.57-.514 2.288-1.41 3.049-1.011.859-1.59 2.107-1.59 3.426 0 2.481 2.019 4.5 4.5 4.5s4.5-2.019 4.5-4.5c0-1.319-.579-2.567-1.589-3.426-.897-.762-1.411-1.48-1.411-3.049v-7.525c0-.827-.673-1.5-1.5-1.5s-1.5.673-1.5 1.5zm5 0v7.525c0 .587.258 1.145.705 1.525 1.403 1.192 2.295 2.966 2.295 4.95 0 3.59-2.909 6.5-6.5 6.5s-6.5-2.91-6.5-6.5c0-1.984.892-3.758 2.295-4.949.447-.381.705-.94.705-1.526v-7.525c0-1.934 1.567-3.5 3.5-3.5s3.5 1.566 3.5 3.5zm0 14c0 1.934-1.567 3.5-3.5 3.5s-3.5-1.566-3.5-3.5c0-1.141.599-2.084 1.393-2.781 1.01-.889 1.607-1.737 1.607-3.221v-.498h1v.498c0 1.486.595 2.33 1.607 3.221.794.697 1.393 1.64 1.393 2.781z',\n        text: '-30º C'\n      }\n    }\n  ])\n\n  const [displayColorPicker, setDisplayColorPicker] = useState(0)\n\n  const [highlightToday, setHighlightToday] = useState(true)\n  const [lang, setLang] = useState('en')\n  const [primaryColor, setPrimaryColor] = useState('#4F6995')\n  const [secondaryColor, setSecondaryColor] = useState('#D7E6EE')\n  const [todayColor, setTodayColor] = useState('#3B3966')\n  const [textColor, setTextColor] = useState('#333333')\n  const [animationSpeed, setAnimationSpeed] = useState(300)\n  const [sidebarWidth, setSidebarWidth] = useState(180)\n  const [detailWidth, setDetailWidth] = useState(280)\n  const [showDetailToggler, setShowDetailToggler] = useState(true)\n  const [showSidebarToggler, setShowSidebarToggler] = useState(true)\n  const [onePanelAtATime, setOnePanelAtATime] = useState(false)\n  const [allowDeleteEvent, setAllowDeleteEvent] = useState(true)\n  const [openDetailsOnDateSelection, setOpenDetailsOnDateSelection] = useState(\n    true\n  )\n  const [timeFormat24, setTimeFormat24] = useState(true)\n  const [detailDateFormat, setDetailDateFormat] = useState('DD/MM/YYYY')\n\n  const [newEventName, setNewEventName] = useState('')\n  const [newEventDate, setNewEventDate] = useState(new Date())\n  const [newEventAllDay, setNewEventAllDay] = useState(false)\n  const [newEventIcon, setNewEventIcon] = useState('')\n  const [newEventText, setNewEventText] = useState('')\n\n  function deleteEvent(i) {\n    var temp = eventList\n    temp.splice(i, 1)\n    setEvents(temp)\n  }\n\n  function addEvent() {\n    var newEvent = {\n      name: newEventName,\n      date: newEventDate,\n      allday: newEventAllDay,\n      extra: {\n        icon: newEventIcon,\n        text: newEventText\n      }\n    }\n    var temp = eventList\n    temp.push(newEvent)\n    setEvents([...temp])\n  }\n\n  useEffect(() => {\n    var deleteEventFunction = deleteEvent.toString()\n    var deleteLines = deleteEventFunction.split('\\n')\n    deleteLines.splice(0, 1)\n    deleteEventFunction = '\\n'\n    deleteEventFunction += deleteLines.join('\\n')\n\n    var addEventFunction = addEvent.toString()\n    var addLines = addEventFunction.split('\\n')\n    addLines.splice(0, 1)\n    addEventFunction = '\\n'\n    addEventFunction += addLines.join('\\n')\n\n    console.log(\n      `%cfunction` + `%cdeleteEvent` + '%c() {',\n      'color: #f777c9',\n      'color: #67fd6e',\n      'color: #D7D7D7',\n      deleteEventFunction\n    )\n    console.log(\n      `%cfunction ` + `%caddEvent` + '%c() {',\n      'color: #f777c9',\n      'color: #67fd6e',\n      'color: #D7D7D7',\n      addEventFunction\n    )\n  }, [])\n\n  useEffect(() => {\n    console.log('%cEventList: ', 'color: #b788f4', eventList)\n  }, [eventList])\n\n  return (\n    <Fragment>\n      <header>\n        <div className='header'>\n          <h1>RevoCalendar</h1>\n          <ul>\n            <li>\n              <a href='#gettingStarted'>Getting Started</a>\n            </li>\n            <li>\n              <a href='#example'>Live Example</a>\n            </li>\n            <li>\n              <a\n                href='https://gjmolter.com'\n                target='_blank'\n                rel='noreferrer noopener'\n              >\n                Author\n              </a>\n            </li>\n            <li>\n              <GitHubButton\n                href='https://github.com/gjmolter/revo-calendar'\n                data-size='large'\n                data-show-count='true'\n                aria-label='Star gjmolter/revo-calendar on GitHub'\n              >\n                Star\n              </GitHubButton>\n            </li>\n          </ul>\n        </div>\n      </header>\n      <div className='container'>\n        <h2 id='gettingStarted'>Getting Started</h2>\n        <p>First, install revo-calendar package using NPM or Yarn</p>\n        <div className='code'>\n          <code>\n            <pre>$ npm i revo-calendar</pre>\n            <pre className='comment'># or</pre>\n            <pre>$ yarn add revo-calendar</pre>\n          </code>\n        </div>\n        <p>Then, import the component and the CSS file</p>\n        <div className='code'>\n          <code>\n            <pre>\n              <span className='codePink'>import</span> RevoCalendar{' '}\n              <span className='codePink'>from</span>{' '}\n              <span className='codeYellow'>'revo-calendar'</span>\n            </pre>\n            <pre>\n              <span className='codePink'>import </span>\n              <span className='codeYellow'>'revo-calendar/dist/index.css'</span>\n            </pre>\n          </code>\n        </div>\n\n        <h2 id='example'>Live Example</h2>\n        <div className='demo'>\n          <RevoCalendar\n            events={eventList}\n            style={{\n              borderRadius: '5px',\n              border: '5px solid var(--primaryColor)'\n            }}\n            date={new Date()}\n            deleteEvent={deleteEvent}\n            highlightToday={highlightToday}\n            lang={lang}\n            primaryColor={primaryColor}\n            secondaryColor={secondaryColor}\n            todayColor={todayColor}\n            textColor={textColor}\n            animationSpeed={animationSpeed}\n            sidebarWidth={sidebarWidth}\n            detailWidth={detailWidth}\n            showDetailToggler={showDetailToggler}\n            showSidebarToggler={showSidebarToggler}\n            onePanelAtATime={onePanelAtATime}\n            allowDeleteEvent={allowDeleteEvent}\n            openDetailsOnDateSelection={openDetailsOnDateSelection}\n            timeFormat24={timeFormat24}\n            detailDateFormat={detailDateFormat}\n          />\n        </div>\n        <p style={{ marginTop: '3rem' }}>Add your own event: </p>\n        <div className='options'>\n          <code>\n            <pre>\n              <span className='codePink'>var </span>newEvent = {'{'}\n            </pre>\n            <pre className='tab'>\n              name<label className='codePink'>:</label> \"\n              <input\n                type='text'\n                value={newEventName}\n                onChange={(e) => setNewEventName(e.target.value)}\n              ></input>\n              \",\n            </pre>\n            <pre className='tab'>\n              date<label className='codePink'>:</label>\n              <DatePicker\n                selected={newEventDate}\n                onChange={(date) => {\n                  setNewEventDate(date)\n                }}\n              />\n              ,\n            </pre>\n            <pre className='tab'>\n              allDay<label className='codePink'>:</label>\n              <input\n                type='checkbox'\n                checked={newEventAllDay}\n                onChange={(e) => setNewEventAllDay(e.target.checked)}\n              />\n              ,\n            </pre>\n            <pre className='tab'>\n              extra<label className='codePink'>:</label> {'{'}\n            </pre>\n            <pre className='tab2'>\n              icon<label className='codePink'>:</label>\"\n              <input\n                type='text'\n                value={newEventIcon}\n                onChange={(e) => setNewEventIcon(e.target.value)}\n              ></input>\n              \",\n            </pre>\n            <pre className='tab2'>\n              text<label className='codePink'>:</label>\"\n              <input\n                type='text'\n                value={newEventText}\n                onChange={(e) => setNewEventText(e.target.value)}\n              ></input>\n              \"\n            </pre>\n            <pre>{'}'}</pre>\n            <div className='addEvent'>\n              <button\n                className='colorPickerBtn'\n                disabled={newEventName === ''}\n                onClick={addEvent}\n              >\n                addEvent()\n              </button>\n            </div>\n          </code>\n        </div>\n        <p style={{ marginTop: '3rem' }}>\n          Before you start playing, please note that you won't be able to modify\n          the <span>date</span>, <span>languages</span>, <span>style</span>,{' '}\n          <span>className</span>, <span>deleteEvent</span>,{' '}\n          <span>detailDefault</span>, <span>sidebarDefault</span> and{' '}\n          <span>getCurrentCalendarState</span> props in this demo.\n        </p>\n        <p>\n          For detailed explanations on all available props, check the{' '}\n          <a\n            href='https://github.com/gjmolter/revo-calendar'\n            target='_blank'\n            rel='noreferrer noopener'\n          >\n            README on GitHub\n          </a>\n        </p>\n        <div className='options'>\n          <div>\n            <label htmlFor='highlightToday'>highlightToday: </label>\n            <input\n              type='checkbox'\n              name='highlightToday'\n              checked={highlightToday}\n              onChange={(e) => {\n                setHighlightToday(e.target.checked)\n              }}\n            />\n          </div>\n          <div\n            onChange={(e) => {\n              setLang(e.target.value)\n            }}\n          >\n            <label htmlFor='lang'>lang: </label>\n            <input type='radio' name='lang' value='en' id='en' defaultChecked />\n            <label htmlFor='en'> English</label>\n            <input type='radio' name='lang' value='pt' id='pt' />\n            <label htmlFor='pt'> Portuguese</label>\n            <input type='radio' name='lang' value='es' id='es' />\n            <label htmlFor='es'> Spanish</label>\n            <input type='radio' name='lang' value='de' id='de' />\n            <label htmlFor='de'> German</label>\n          </div>\n          <div>\n            <label>primaryColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 1 ? 0 : 1)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 1 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 1 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={primaryColor}\n                  onChangeComplete={(c) => setPrimaryColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label>secondaryColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 2 ? 0 : 2)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 2 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 2 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={secondaryColor}\n                  onChangeComplete={(c) => setSecondaryColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label>todayColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 3 ? 0 : 3)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 3 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 3 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={todayColor}\n                  onChangeComplete={(c) => setTodayColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label>textColor: </label>\n            <button\n              onClick={() =>\n                setDisplayColorPicker(displayColorPicker === 4 ? 0 : 4)\n              }\n              className='colorPickerBtn'\n            >\n              {displayColorPicker === 4 ? 'Close' : 'Pick Color'}\n            </button>\n            {displayColorPicker === 4 && (\n              <div className='pickerContainer'>\n                <ChromePicker\n                  color={textColor}\n                  onChangeComplete={(c) => setTextColor(c.hex)}\n                  disableAlpha={true}\n                />\n              </div>\n            )}\n          </div>\n          <div>\n            <label htmlFor='animationSpeed'>animationSpeed: </label>\n            <input\n              type='number'\n              name='animationSpeed'\n              onChange={(e) => setAnimationSpeed(parseInt(e.target.value))}\n              value={animationSpeed}\n            ></input>\n            <span style={{ marginLeft: '10px' }}>ms</span>\n          </div>\n          <div>\n            <label htmlFor='sidebarWidth'>sidebarWidth: </label>\n            <input\n              type='number'\n              name='sidebarWidth'\n              onChange={(e) => setSidebarWidth(parseInt(e.target.value))}\n              value={sidebarWidth}\n            ></input>\n            <span style={{ marginLeft: '10px' }}>px</span>\n          </div>\n          <div>\n            <label htmlFor='detailWidth'>detailWidth: </label>\n            <input\n              type='number'\n              name='detailWidth'\n              onChange={(e) => setDetailWidth(parseInt(e.target.value))}\n              value={detailWidth}\n            ></input>\n            <span style={{ marginLeft: '10px' }}>px</span>\n          </div>\n          <div>\n            <label htmlFor='showDetailToggler'>showDetailToggler: </label>\n            <input\n              type='checkbox'\n              name='showDetailToggler'\n              checked={showDetailToggler}\n              onChange={(e) => {\n                setShowDetailToggler(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='showSidebarToggler'>showSidebarToggler: </label>\n            <input\n              type='checkbox'\n              name='showSidebarToggler'\n              checked={showSidebarToggler}\n              onChange={(e) => {\n                setShowSidebarToggler(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='onePanelAtATime'>onePanelAtATime: </label>\n            <input\n              type='checkbox'\n              name='onePanelAtATime'\n              checked={onePanelAtATime}\n              onChange={(e) => {\n                setOnePanelAtATime(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='allowDeleteEvent'>allowDeleteEvent: </label>\n            <input\n              type='checkbox'\n              name='allowDeleteEvent'\n              checked={allowDeleteEvent}\n              onChange={(e) => {\n                setAllowDeleteEvent(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='openDetailsOnDateSelection'>\n              openDetailsOnDateSelection:{' '}\n            </label>\n            <input\n              type='checkbox'\n              name='openDetailsOnDateSelection'\n              checked={openDetailsOnDateSelection}\n              onChange={(e) => {\n                setOpenDetailsOnDateSelection(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='timeFormat24'>timeFormat24: </label>\n            <input\n              type='checkbox'\n              name='timeFormat24'\n              checked={timeFormat24}\n              onChange={(e) => {\n                setTimeFormat24(e.target.checked)\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='detailDateFormat'>detailDateFormat: </label>\n            <input\n              type='text'\n              name='detailDateFormat'\n              value={detailDateFormat}\n              onChange={(e) => {\n                setDetailDateFormat(e.target.value)\n              }}\n            />\n          </div>\n        </div>\n        <p>\n          Current coponent's JSX code (Some of these could be removed, if it\n          wouldn't change the component's defaults):\n        </p>\n        <div className='code'>\n          <code>\n            <pre>\n              {'<'}\n              <span className='codeBlue'>RevoCalendar</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>events</span>\n              {'={'}\n              <span className='codePurple'>eventList</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>style</span>\n              {'={{'}\n            </pre>\n            <pre className='tab2'>\n              borderRadius:\n              <span className='codeYellow'>\"5px\"</span>\n              {','}\n            </pre>\n            <pre className='tab2'>\n              border:\n              <span className='codeYellow'>\n                \"5px solid var(--primaryColor)\"\n              </span>\n            </pre>\n            <pre className='tab'>{'}}'}</pre>\n            <pre className='tab'>\n              <span className='codeGreen'>highlightToday</span>\n              {'={'}\n              <span className='codePurple'>{highlightToday.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>lang</span>\n              {'='}\n              <span className='codeYellow'>\"{lang}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>primaryColor</span>\n              {'='}\n              <span className='codeYellow'>\"{primaryColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>secondaryColor</span>\n              {'='}\n              <span className='codeYellow'>\"{secondaryColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>todayColor</span>\n              {'='}\n              <span className='codeYellow'>\"{todayColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>textColor</span>\n              {'='}\n              <span className='codeYellow'>\"{textColor}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>animationSpeed</span>\n              {'={'}\n              <span className='codePurple'>{animationSpeed}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>sidebarWidth</span>\n              {'={'}\n              <span className='codePurple'>{sidebarWidth}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>detailWidth</span>\n              {'={'}\n              <span className='codePurple'>{detailWidth}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>showDetailToggler</span>\n              {'={'}\n              <span className='codePurple'>{showDetailToggler.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>showSidebarToggler</span>\n              {'={'}\n              <span className='codePurple'>\n                {showSidebarToggler.toString()}\n              </span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>onePanelAtATime</span>\n              {'={'}\n              <span className='codePurple'>{onePanelAtATime.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>allowDeleteEvent</span>\n              {'={'}\n              <span className='codePurple'>{allowDeleteEvent.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>openDetailsOnDateSelection</span>\n              {'={'}\n              <span className='codePurple'>\n                {openDetailsOnDateSelection.toString()}\n              </span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>timeFormat24</span>\n              {'={'}\n              <span className='codePurple'>{timeFormat24.toString()}</span>\n              {'}'}\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>detailDateFormat</span>\n              {'='}\n              <span className='codeYellow'>\"{detailDateFormat}\"</span>\n            </pre>\n            <pre className='tab'>\n              <span className='codeGreen'>deleteEvent</span>\n              {'={'}\n              <span className='codeGreen'>deleteEvent</span>\n              {'}'}\n            </pre>\n            <pre>{'/>'}</pre>\n          </code>\n        </div>\n        <p>\n          If you're curious on what{' '}\n          <span className='codeGreen'>deleteEvent</span> or{' '}\n          <span className='codeGreen'>addEvent</span> functions do or what the{' '}\n          <span className='codePurple'>eventList</span> variable looks like,\n          check the DevTools Console!\n        </p>\n      </div>\n      <footer>\n        <p>\n          If you find this usefull and it has saved you some time, please\n          consider\n        </p>\n        <div className='bmc'>\n          <a\n            target='_blank'\n            rel='noreferrer noopener'\n            href='https://www.buymeacoffee.com/gjmolter'\n          >\n            <img\n              src='https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg'\n              alt='Buying me a Coffee'\n            />\n            <span>Buying me a Coffee</span>\n          </a>\n        </div>\n        <p>\n          Also, feel free to contribute with this project on{' '}\n          <a\n            href='https://github.com/gjmolter/revo-calendar'\n            target='_blank'\n            rel='noreferrer noopener'\n          >\n            GitHub\n          </a>\n        </p>\n      </footer>\n    </Fragment>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}